gc()
# BEM July 2023
ppt_dir <- '/home/bem/Documents/HIPPNET/HDCP/PPT_22July2023'
#maxT_dir <- '/home/bem/Documents/HIPPNET/HDCP/maxT_22July2023'
ppt_list <- lapply(ppt_zips, \(ii) {
#for (i in seq_along(clim_zips)) {
#ii <- clim_zips[i]
i_l <- unzip(ii, list = T)[, 1]
i_fl <- i_l[grepl('\\.csv', i_l)]
i_uz <- unzip(ii, i_fl, exdir = temp_dir)
stopifnot(file.exists(i_uz))
# only works with one csv at a time
i_csv <- read.csv(i_uz)
i_csv <- i_csv[which(i_csv$Station.Name == 'Laupahoehoe'), ]
i_csv <- i_csv[which(i_csv$Network == 'HIPPNET'), ]
i_csv <- i_csv[, c('Station.Name', colnames(i_csv)[grepl('X', colnames(i_csv))])]
i_csv <- tidyr::pivot_longer(i_csv, cols = c(14:ncol(i_csv)))
i_csv$name <- sapply(strsplit(i_csv$name, 'X'), \(xx) xx[2])
i_csv$year <- sapply(strsplit(i_csv$name, '\\.'), \(xx) xx[1])
i_csv$month <- sapply(strsplit(i_csv$name, '\\.'), \(xx) xx[2])
i_csv <- within(i_csv, rm(name))
})
ppt_list <- lapply(ppt_zips, \(ii) {
#for (i in seq_along(clim_zips)) {
#ii <- clim_zips[i]
i_l <- unzip(ii, list = T)[, 1]
i_fl <- i_l[grepl('\\.csv', i_l)]
i_uz <- unzip(ii, i_fl, exdir = temp_dir)
stopifnot(file.exists(i_uz))
# only works with one csv at a time
i_csv <- read.csv(i_uz)
i_csv <- i_csv[which(i_csv$Station.Name == 'Laupahoehoe'), ]
i_csv <- i_csv[which(i_csv$Network == 'HIPPNET'), ]
#i_csv <- i_csv[, c('Station.Name', colnames(i_csv)[grepl('X', colnames(i_csv))])]
i_csv <- tidyr::pivot_longer(i_csv, cols = c(14:ncol(i_csv)))
i_csv$name <- sapply(strsplit(i_csv$name, 'X'), \(xx) xx[2])
i_csv$year <- sapply(strsplit(i_csv$name, '\\.'), \(xx) xx[1])
i_csv$month <- sapply(strsplit(i_csv$name, '\\.'), \(xx) xx[2])
i_csv <- within(i_csv, rm(name))
})
ppt_df <- do.call('rbind', clim_list)
ppt_df <- do.call('rbind', ppt_list)
head(ppt_df)
View(ppt_df)
View(ppt_df)
ppt_df <- ppt_df[, c('Station.Name', 'value', 'year', 'month')]
View(ppt_df)
aggregate(ppt_df$value, by = list(ppt_df$year, FUN = sum))
aggregate(ppt_df$value, by = list(ppt_df$year), FUN = sum)
head(ppt_df)
data_dir <- '../data'
# aggregate(ppt_df$value, by = list(ppt_df$year), FUN = sum)
write.csv(ppt_df, file.path(data_dir, 'PPT_Laupahoehoe.csv'))
head(ppt_df)
# get climate data
ppt_df <- read.csv(file.path(data_dir, 'PPT_Laupahoehoe.csv'))
# get climate data
ppt_df <- read.csv(file.path(data_dir, 'PPT_Laupahoehoe.csv'), row.names = F)
rm(list = ls())
gc()
# BEM July 2023
ppt_dir <- '/home/bem/Documents/HIPPNET/HDCP/PPT_22July2023'
data_dir <- '../data'
#maxT_dir <- '/home/bem/Documents/HIPPNET/HDCP/maxT_22July2023'
#temp_dir <- tempdir()
ppt_zips <- list.files(ppt_dir, pattern = '\\.zip', full.names = T)
#maxT_zips <- list.files(maxT_dir, pattern = '\\.zip', full.names = T)
ppt_list <- lapply(ppt_zips, \(ii) {
#for (i in seq_along(clim_zips)) {
#ii <- clim_zips[i]
i_l <- unzip(ii, list = T)[, 1]
i_fl <- i_l[grepl('\\.csv', i_l)]
i_uz <- unzip(ii, i_fl, exdir = temp_dir)
stopifnot(file.exists(i_uz))
# only works with one csv at a time
i_csv <- read.csv(i_uz)
i_csv <- i_csv[which(i_csv$Station.Name == 'Laupahoehoe'), ]
i_csv <- i_csv[which(i_csv$Network == 'HIPPNET'), ]
#i_csv <- i_csv[, c('Station.Name', colnames(i_csv)[grepl('X', colnames(i_csv))])]
i_csv <- tidyr::pivot_longer(i_csv, cols = c(14:ncol(i_csv)))
i_csv$name <- sapply(strsplit(i_csv$name, 'X'), \(xx) xx[2])
i_csv$year <- sapply(strsplit(i_csv$name, '\\.'), \(xx) xx[1])
i_csv$month <- sapply(strsplit(i_csv$name, '\\.'), \(xx) xx[2])
i_csv <- within(i_csv, rm(name))
})
temp_dir <- tempdir()
ppt_dir <- '/home/bem/Documents/HIPPNET/HDCP/PPT_22July2023'
data_dir <- '../data'
#maxT_dir <- '/home/bem/Documents/HIPPNET/HDCP/maxT_22July2023'
#temp_dir <- tempdir()
ppt_zips <- list.files(ppt_dir, pattern = '\\.zip', full.names = T)
#maxT_zips <- list.files(maxT_dir, pattern = '\\.zip', full.names = T)
ppt_list <- lapply(ppt_zips, \(ii) {
#for (i in seq_along(clim_zips)) {
#ii <- clim_zips[i]
i_l <- unzip(ii, list = T)[, 1]
i_fl <- i_l[grepl('\\.csv', i_l)]
i_uz <- unzip(ii, i_fl, exdir = temp_dir)
stopifnot(file.exists(i_uz))
# only works with one csv at a time
i_csv <- read.csv(i_uz)
i_csv <- i_csv[which(i_csv$Station.Name == 'Laupahoehoe'), ]
i_csv <- i_csv[which(i_csv$Network == 'HIPPNET'), ]
#i_csv <- i_csv[, c('Station.Name', colnames(i_csv)[grepl('X', colnames(i_csv))])]
i_csv <- tidyr::pivot_longer(i_csv, cols = c(14:ncol(i_csv)))
i_csv$name <- sapply(strsplit(i_csv$name, 'X'), \(xx) xx[2])
i_csv$year <- sapply(strsplit(i_csv$name, '\\.'), \(xx) xx[1])
i_csv$month <- sapply(strsplit(i_csv$name, '\\.'), \(xx) xx[2])
i_csv <- within(i_csv, rm(name))
})
ppt_df <- do.call('rbind', ppt_list)
ppt_df <- ppt_df[, c('Station.Name', 'value', 'year', 'month')]
# aggregate(ppt_df$value, by = list(ppt_df$year), FUN = sum)
write.csv(ppt_df, file.path(data_dir, 'PPT_Laupahoehoe.csv'), row.names = F)
rm(list = ls)
rm(list = ls())
gc()
# get climate data
ppt_df <- read.csv(file.path(data_dir, 'PPT_Laupahoehoe.csv'), row.names = NULL)
rm(list = ls())
gc()
data_dir <- '../data'
# get demography data
LAU <- read.csv(file.path(data_dir, 'LAU_processed.csv'))
# need to only use mainstems
LAU <- LAU[which(LAU$mstem == 0), ]
# get DEM covariates
LAU_TRI <- terra::rast(file.path(data_dir, 'LAU_TRI.tif'))
LAU_TWI <- terra::rast(file.path(data_dir, 'LAU_TWI.tif'))
LAU_rad <- terra::rast(file.path(data_dir, 'LAU_rad.tif'))
LAU_wind <- terra::rast(file.path(data_dir, 'LAU_wind.tif'))
LAU$TRI <- terra::extract(LAU_TRI, LAU[, c('x', 'y')])[, 2]
LAU$TWI <- terra::extract(LAU_TWI, LAU[, c('x', 'y')])[, 2]
LAU$rad <- terra::extract(LAU_rad, LAU[, c('x', 'y')])[, 2]
LAU$wind <- terra::extract(LAU_wind, LAU[, c('x', 'y')])[, 2]
# get climate data
ppt_df <- read.csv(file.path(data_dir, 'PPT_Laupahoehoe.csv'), row.names = NULL)
head(ppt_df)
head(LAU)
rm(list = ls())
gc()
# BEM July 2023
library(terra)
library(brms)
data_dir <- '../data'
# get demography data
LAU <- read.csv(file.path(data_dir, 'LAU_processed.csv'))
# need to only use mainstems
LAU <- LAU[which(LAU$mstem == 0), ]
# get DEM covariates
LAU_TRI <- terra::rast(file.path(data_dir, 'LAU_TRI.tif'))
LAU_TWI <- terra::rast(file.path(data_dir, 'LAU_TWI.tif'))
LAU_rad <- terra::rast(file.path(data_dir, 'LAU_rad.tif'))
LAU_wind <- terra::rast(file.path(data_dir, 'LAU_wind.tif'))
LAU$TRI <- terra::extract(LAU_TRI, LAU[, c('x', 'y')])[, 2]
LAU$TWI <- terra::extract(LAU_TWI, LAU[, c('x', 'y')])[, 2]
LAU$rad <- terra::extract(LAU_rad, LAU[, c('x', 'y')])[, 2]
LAU$wind <- terra::extract(LAU_wind, LAU[, c('x', 'y')])[, 2]
# get climate data
ppt_df <- read.csv(file.path(data_dir, 'PPT_Laupahoehoe.csv'), row.names = NULL)
head(LAU)
LAU <- LAU[, c('CensusID', 'DFstatus', 'slp', 'sp', 'x', 'y', 'treeID', 'dbh')]
LAU$TRI <- terra::extract(LAU_TRI, LAU[, c('x', 'y')])[, 2]
LAU$TWI <- terra::extract(LAU_TWI, LAU[, c('x', 'y')])[, 2]
LAU$rad <- terra::extract(LAU_rad, LAU[, c('x', 'y')])[, 2]
LAU$wind <- terra::extract(LAU_wind, LAU[, c('x', 'y')])[, 2]
head(LAU)
head(ppt_df)
# get demography data
LAU <- read.csv(file.path(data_dir, 'LAU_processed.csv'))
# need to only use mainstems
LAU <- LAU[which(LAU$mstem == 0), ]
LAU <- LAU[, c('CensusID', 'DFstatus','ExactDate', 'slp', 'sp', 'x', 'y', 'treeID', 'dbh')]
# get DEM covariates
LAU_TRI <- terra::rast(file.path(data_dir, 'LAU_TRI.tif'))
LAU_TWI <- terra::rast(file.path(data_dir, 'LAU_TWI.tif'))
LAU_rad <- terra::rast(file.path(data_dir, 'LAU_rad.tif'))
LAU_wind <- terra::rast(file.path(data_dir, 'LAU_wind.tif'))
LAU$TRI <- terra::extract(LAU_TRI, LAU[, c('x', 'y')])[, 2]
LAU$TWI <- terra::extract(LAU_TWI, LAU[, c('x', 'y')])[, 2]
LAU$rad <- terra::extract(LAU_rad, LAU[, c('x', 'y')])[, 2]
LAU$wind <- terra::extract(LAU_wind, LAU[, c('x', 'y')])[, 2]
head(LAU)
LAU$ExactDate <- sapply(strsplit(LAU$ExactDate, ' '), \(xx) xx[1])
head(LAU)
LAU$ExactDate <- strptime(LAU$ExactDate, format = '%m/%d/%y')
head(LAU)
head(ppt_df)
ppt_df$value <- round(ppt_df$value)
head(ppt_df)
head(LAU)
# get demography data
LAU <- read.csv(file.path(data_dir, 'LAU_processed.csv'))
# need to only use mainstems
LAU <- LAU[which(LAU$mstem == 0), ]
LAU <- LAU[, c('CensusID', 'DFstatus', 'slp', 'sp', 'x', 'y', 'treeID', 'dbh')]
#LAU$ExactDate <- sapply(strsplit(LAU$ExactDate, ' '), \(xx) xx[1])
#LAU$ExactDate <- strptime(LAU$ExactDate, format = '%m/%d/%y')
LAU <- LAU[which(LAU$CensusID == 5), ]
head(LAU)
# get demography data
LAU <- read.csv(file.path(data_dir, 'LAU_processed.csv'))
# need to only use mainstems
LAU <- LAU[which(LAU$mstem == 0), ]
LAU <- LAU[which(LAU$CensusID == 5), ]
LAU <- LAU[, c('DFstatus', 'slp', 'sp', 'x', 'y', 'treeID', 'dbh')]
head(LAU)
head(ppt_df)
# get DEM covariates
LAU_TRI <- terra::rast(file.path(data_dir, 'LAU_TRI.tif'))
LAU_TWI <- terra::rast(file.path(data_dir, 'LAU_TWI.tif'))
LAU_rad <- terra::rast(file.path(data_dir, 'LAU_rad.tif'))
LAU_wind <- terra::rast(file.path(data_dir, 'LAU_wind.tif'))
LAU$TRI <- terra::extract(LAU_TRI, LAU[, c('x', 'y')])[, 2]
LAU$TWI <- terra::extract(LAU_TWI, LAU[, c('x', 'y')])[, 2]
LAU$rad <- terra::extract(LAU_rad, LAU[, c('x', 'y')])[, 2]
LAU$wind <- terra::extract(LAU_wind, LAU[, c('x', 'y')])[, 2]
# get climate data
ppt_df <- read.csv(file.path(data_dir, 'PPT_Laupahoehoe.csv'), row.names = NULL)
ppt_df$value <- round(ppt_df$value)
head(ppt_df)
head(LAU)
# BEM July 2023
library(terra)
library(brms)
data_dir <- '../data'
# get demography data
LAU <- read.csv(file.path(data_dir, 'LAU_processed.csv'))
# need to only use mainstems
LAU <- LAU[which(LAU$mstem == 0), ]
LAU <- LAU[which(LAU$CensusID == 5), ]
LAU <- LAU[, c('DFstatus', 'slp', 'sp', 'x', 'y', 'treeID', 'dbh')]
#LAU$ExactDate <- sapply(strsplit(LAU$ExactDate, ' '), \(xx) xx[1])
#LAU$ExactDate <- strptime(LAU$ExactDate, format = '%m/%d/%y')
# get DEM covariates
LAU_TRI <- terra::rast(file.path(data_dir, 'LAU_TRI.tif'))
LAU_TWI <- terra::rast(file.path(data_dir, 'LAU_TWI.tif'))
LAU_rad <- terra::rast(file.path(data_dir, 'LAU_rad.tif'))
LAU_wind <- terra::rast(file.path(data_dir, 'LAU_wind.tif'))
LAU$TRI <- terra::extract(LAU_TRI, LAU[, c('x', 'y')])[, 2]
LAU$TWI <- terra::extract(LAU_TWI, LAU[, c('x', 'y')])[, 2]
LAU$rad <- terra::extract(LAU_rad, LAU[, c('x', 'y')])[, 2]
LAU$wind <- terra::extract(LAU_wind, LAU[, c('x', 'y')])[, 2]
# get climate data
ppt_df <- read.csv(file.path(data_dir, 'PPT_Laupahoehoe.csv'), row.names = NULL)
ppt_df$value <- round(ppt_df$value)
plot(LAU_TWI)
list.files(data_dir)
ELEV <- terra::rast(file.path(data_dir, 'LAU_DEM.tif'))
plot(ELEV)
unique(LAU$sp)
plot(LAU_TWI)
plot(LAU_wind)
?`brms-package`
?brm
# BEM JULY 2023
# Purpose: Initial import script for demography data from Becky's census 1-6 data
data_dir <- '/home/bem/Documents/ForestGEO/analysis/data/Census 1-6 CTFS formatted data'
# QA/QC
LAU <- read.csv(file.path(data_dir, '/data/Laupahoehoe_master.csv'), header = T)
# total lines 124278
# drop extra columns
LAU <- LAU[, c(1:33)]
colnames(LAU) <- c(colnames(LAU)[c(1:23)], 'SPACE', colnames(LAU)[24:(length(colnames(LAU)) - 1)])
# force coercion
LAU$treeID <- as.numeric(LAU$treeID)
LAU <- LAU[!is.na(LAU$treeID), ]
# 124246 stems, less than 1% drop
# drop weird columns
LAU <- LAU[, -c(1, 2, 11, 14, 17, 18, 24)]
# some columns are empty
LAU <- LAU[, -which(colnames(LAU) %in% c('StemTag', 'agb', 'codes'))]
# drop records which dont have a species
LAU <- LAU[!is.na(LAU$sp), ]
# drop records which dont have a status
LAU <- LAU[!is.na(LAU$status), ]
# drop records where the species is wrong
LAU <- LAU[which(LAU$sp %in% FGEO1::Laupahoehoe_sp_list), ]
# change mstem to ordered
LAU$mstem <- as.numeric(LAU$mstem)
# short-term filters
# remove all missing DBH that are not CIB*
#row.names(LAU) <- seq.int(nrow(LAU))
#miss_DBH <- LAU[!(LAU$sp %in% c('CIBMEN', 'CIBGLA', 'CIBCHA')), ]
#miss_DBH <- miss_DBH[is.na(miss_DBH$dbh), ]
#LAU <- LAU[-as.numeric(row.names(miss_DBH)), ]
# use only main stems
#LAU <- LAU[which(LAU$mstem == 0), ]
# drop the METPOL which were not measured in every census
#MET_full <- LAU[which(LAU$sp == 'METPOL' & !is.na(LAU$dbh)), ]
#table(MET_full$CensusID)
# census 1 and 5 are the full census
#rm(MET_full)
LAU <- LAU[which(LAU$CensusID %in% c(1, 5)), ]
# don't know what 'prior' means
LAU <- LAU[-which(LAU$DFstatus == 'prior'), ]
LAU[which(LAU$DFstatus %in% c('gone', 'missing')), 'DFstatus'] <- 'dead'
# all trees alive in first census
# just use species with > 200 total stems
sp_tbl <- table(LAU$sp, LAU$DFstatus)
sp_tbl <- as.data.frame(sp_tbl)
sp_tbl <- aggregate(sp_tbl$Freq, by = list(sp_tbl$Var1), FUN = sum)
sp_tbl <- sp_tbl[which(sp_tbl$x > 300), ] # cutoff of 200 total stems
LAU <- LAU[which(LAU$sp %in% sp_tbl$Group.1), ]
write.csv(LAU, '../data/LAU_processed.csv', row.names = F)
rm(list = ls())
gc()
# get demography data
LAU <- read.csv(file.path(data_dir, 'LAU_processed.csv'))
data_dir <- '../data'
# get demography data
LAU <- read.csv(file.path(data_dir, 'LAU_processed.csv'))
# need to only use mainstems
LAU <- LAU[which(LAU$mstem == 0), ]
LAU <- LAU[which(LAU$CensusID == 5), ]
LAU <- LAU[, c('DFstatus', 'slp', 'sp', 'x', 'y', 'treeID', 'dbh')]
head(LAU)
View(LAU)
table(LAU$sp)
test0 <- terra::rast(crs = 'epsg:32605', extent = ext(c(260420, 260620, 2205378, 2205578))
)
library(terra)
test0 <- terra::rast(crs = 'epsg:32605', extent = ext(c(260420, 260620, 2205378, 2205578)))
plot(test0)
extent(test0)
ext(test0)
terra::project(test0, crs = 'epsg:4326')
terra::project(test0, 'epsg:4326')
data_dir <- '../data'
rm(test0)
gc()
list.files(data_dir)
daymet<- read.csv(file.path(data_dir, '9733_lat_19.93_lon_-155.28_2023-07-23_155903.csv'))
head(daymet)
View(daymet)
daymet<- read.csv(file.path(data_dir, '9733_lat_19.93_lon_-155.28_2023-07-23_155903.csv'), skip = 5)
daymet<- read.csv(file.path(data_dir, '9733_lat_19.93_lon_-155.28_2023-07-23_155903.csv'), skip = 7)
head(daymet)
unique(daymet$year)
View(daymet)
# climate normal period is January 1981 to December 2010.
# dry season is day 100-200  or 120-215/220
daymet_dry <- daymet[daymet_dry$yday %in% c(100:200), ]
# climate normal period is January 1981 to December 2010.
# dry season is day 100-200  or 120-215/220
daymet_dry <- daymet[daymet$yday %in% c(100:200), ]
daymet_dry
boxplot(daymet_dry$year, daymet_dry$prcp..mm.day)
unique(daymet_dry$year)
boxplot(daymet_dry$prcp..mm.day. ~ daymet_dry$year)
plot(daymet_dry$year, daymet_dry$prcp..mm.day.)
normal_ppt <- mean(daymet_dry[daymet_dry$year %in% c(1981:2010), ])
normal_ppt <- mean(daymet_dry[daymet_dry$year %in% c(1981:2010), ], na.rm = T)
head(daymet_dry)
str(daymet_dry)
normal_ppt <- mean(daymet_dry[daymet_dry$year %in% c(1981:2010), "prcp..mm.day."], na.rm = T)
daymet_dry$ppt_anom <- daymet_dry$prcp..mm.day. - normal_ppt
plot(daymet_dry$ppt_anom)
plot(daymet_dry$ppt_anom)
plot(daymet_dry$prcp..mm.day.)
daymet_dry$ppt_scaled <- scale(daymet_dry$prcp..mm.day.)
plot(daymet_dry$ppt_scaled)
View(daymet_dry)
# climate normal period is January 1981 to December 2010.
# dry season is day 100-200  or 120-215/220
daymet_dry <- daymet |>
dplyr::filter(yday %in% c(100:200)) |>
dplyr::group_by(year) |>
summarize(prcp = sum(prcp..mm.day.))
# climate normal period is January 1981 to December 2010.
# dry season is day 100-200  or 120-215/220
daymet_dry <- daymet |>
dplyr::filter(yday %in% c(100:200)) |>
dplyr::group_by(year) |>
dplyr::summarize(prcp = sum(prcp..mm.day.))
daymet_dry
# climate normal period is January 1981 to December 2010.
# dry season is day 100-200  or 120-215/220
daymet_dry <- daymet |>
dplyr::filter(yday %in% c(100:200)) |>
dplyr::group_by(year) |>
dplyr::summarize(prcp = sum(prcp..mm.day.)) |>
dplyr::ungroup() |>
dplyr::mutate(anom = prcp - mean(prcp))
daymet_dry
View(daymet_dry)
plot(daymet_dry)
plot(daymet_dry$year, daymet_dry$anom)
plot(daymet_dry$year, daymet_dry$prcp)
# climate normal period is January 1981 to December 2010.
# dry season is day 100-200  or 120-215/220
daymet_dry <- daymet |>
dplyr::filter(yday %in% c(100:200)) |>
dplyr::group_by(year) |>
dplyr::summarize(prcp = sum(prcp..mm.day.)) |>
dplyr::ungroup() |>
dplyr::mutate(prcp_scale = scale(prcp))
View(daymet_dry)
plto(daymet_dry)
plot(daymet_dry$year, daymet_dry$prcp_scale)
head(daymet)
plot(daymet$tmax..deg.c.)
head(daymet)
plot(daymet$vp..Pa.)
# climate normal period is January 1981 to December 2010.
# dry season is day 100-200  or 120-215/220
daymet_dry <- daymet |>
dplyr::filter(yday %in% c(100:200)) |>
dplyr::group_by(year) |>
dplyr::summarize(prcp = sum(prcp..mm.day.), vpd = mean(vp..Pa.)) |>
dplyr::ungroup() |>
dplyr::mutate(prcp_scale = scale(prcp), vpd_scale = scale(vpd))d
# climate normal period is January 1981 to December 2010.
# dry season is day 100-200  or 120-215/220
daymet_dry <- daymet |>
dplyr::filter(yday %in% c(100:200)) |>
dplyr::group_by(year) |>
dplyr::summarize(prcp = sum(prcp..mm.day.), vpd = mean(vp..Pa.)) |>
dplyr::ungroup() |>
dplyr::mutate(prcp_scale = scale(prcp), vpd_scale = scale(vpd))
View(daymet_dry)
plot(daymet_dry$vpd_scale)
plot(daymet_dry$eyar, daymet_dry$vpd_scale)
plot(daymet_dry$year, daymet_dry$vpd_scale)
# BEM July 2023
library(terra)
topo_file <- '../data/USGS_1M_5_x26y221_HI_Hawaii_Island_Lidar_NOAA_2017_B17.tif'
tree_df <- read.csv('../../results/test_tree_df.csv')
DEM <- terra::rast(topo_file)
DEM <- terra::project(DEM, y = crs('epsg:32605'))
LAU_rast <- terra::rast(crs = 'epsg:32605', extent = ext(c(260420, 260620, 2205378, 2205578)))
DEM <- terra::crop(DEM, LAU_rast)
list.files('../data')
writeRaster(LAU_rast, LAU_DEM_fl, filetype = "GTIff")
LAU_DEM_fl <- '../data/LAU_DEM_tif.tif'
writeRaster(LAU_rast, LAU_DEM_fl, filetype = "GTIff")
plot(DEM)
writeRaster(DEM, LAU_DEM_fl, filetype = "GTIff")
DEM_mat <- terra::rast('../data/LAU_DEM_mat.tif')
plot(DEM_mat)
saga <- Rsagacmd::saga_gis(saga_bin = '../saga-9.0.2_x64/saga_cmd.exe', raster_backend = 'terra', cores = 2)
saga <- Rsagacmd::saga_gis(saga_bin = '../saga-9.0.2_x64/saga_cmd.exe', raster_backend = 'terra', cores = 2)
# BEM July 2023
library(terra)
topo_file <- '../data/USGS_1M_5_x26y221_HI_Hawaii_Island_Lidar_NOAA_2017_B17.tif'
LAU_DEM_fl <- '../data/LAU_DEM_tif.tif'
tree_df <- read.csv('../../results/test_tree_df.csv')
saga <- Rsagacmd::saga_gis(saga_bin = '../saga-9.0.2_x64/saga_cmd.exe', raster_backend = 'terra', cores = 2)
saga <- Rsagacmd::saga_gis(sraster_backend = 'terra', cores = 2)
saga <- Rsagacmd::saga_gis(raster_backend = 'terra', cores = 2)
# Variables to calculate will be:
# Topographic wetness index
TWI_FUN <- saga$ta_hydrology$topographic_wetness_index_twi
# Requires slope and catchment area
SLOPE_FUN <- saga$ta_morphometry$slope_aspect_curvature
SCA_FUN <- saga$ta_hydrology$flow_width_and_specific_catchment_area
# catchment area requires flow accumulation
FAT_FUN <- saga$ta_hydrology$flow_accumulation_top_down
fat <- FAT_FUN(LAU_DEM_fl)$flow
plot(fat)
DEM <- rast(LAU_DEM_fl)
plot(DEM)
fat_fl <- '../data/LAU_fat.tif'
writeRaster(fat, fat_fl, filetype = "GTiff")
sca <- SCA_FUN(LAU_DEM_fl, fat_fl)$sca
sca_fl <- '../data/LAU_sca.tif'
writeRaster(sca, sca_fl, filetype = "GTiff")
plot(SCA)
plot(sca)
SCA_FUN
sca <- SCA_FUN(LAU_DEM_fl, fat_fl)$sca
plot(ft)
plot9fat
plot(fat)
rm(fat)
gc
gc()
fat <- rast(fat_fl)
plot(fat)
rm(fat)
gc()
sca <- SCA_FUN(LAU_DEM_fl, fat_fl)$sca
rad_fl <- '../data/LAU_rad.tif'
rad <- terra::rast(rad_fl)
plot(rad)
library(terra)
plot(rad)
# BEM July 2023
library(brms)
library(ggplot2)
library(lme4)
install.packages("lme4")
install.packages("lme4")
# BEM July 2023
library(brms)
library(ggplot2)
library(lme4)
data_dir <- '../data'
LAU <- read.csv(file.path(data_dir, 'LAU_df_for_model.csv'))
LAU$b_m <- ifelse(LAU$DFstatus == 'dead', 0, 1)
LAU$ppt <- scale(LAU$ppt)
LAU$TWI <- scale(LAU$TWI)
LAU$wind <- scale(LAU$wind)
LAU$rad <- scale(LAU$rad)
# VDCN had some NA, set them to mean
LAU$VDCN <- ifelse(is.na(LAU$VDCN), mean(LAU$VDCN, na.rm = T), LAU$VDCN)
LAU$VDCN <- scale(LAU$VDCN)
f1 <- b_m ~ TWI + rad + wind + VDCN
#m1 <- brms::brm(f1, LAU, family = brmsfamily('binomial', link = 'logit'), cores = 4, iter = 3000)
m1 <- glm(f1, family = binomial, data = LAU)
m1
summary(m1)
