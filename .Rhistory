LAU <- LAU[which(LAU$CensusID %in% c(1, 5)), ]
# don't know what 'prior' means
LAU <- LAU[-which(LAU$DFstatus == 'prior'), ]
LAU[which(LAU$DFstatus %in% c('gone', 'missing')), 'DFstatus'] <- 'dead'
# drop trees which were dead in first census
head(LAU)
v
LAU[-which(LAU$CensusID == 1) & which(LAU$DFstatus == 'dead'), ]
# drop trees which were dead in first census
row.names(LAU) <- seq.int(nrow(LAU))
head(LAU)
# census 1 and 5 are the full census
rm(MET_full)
c1 <- LAU[which(LAU$CensusID == 1), ]
c1 <- LAU[which(LAU$DFstatus == 'dead'), ]
head(c1)
c1 <- LAU[which(LAU$CensusID == 1), ]
c1 <- LAU[which(c1$DFstatus == 'dead'), ]
c1 <- LAU[which(LAU$CensusID == 1), ]
table(c1$DFstatus)
# all trees alive in first census
# just use 5th census
LAU <- LAU[which(LAU$CensusID == 5), ]
rm(c1)
head(LAU)
table(LAU$CensusID)
table(LAU$DFstatus)
ggplot(data = LAU[which(LAU$CensusID == 5), ], aes(x = x, y = y, fill = DFstatus)) +
geom_point()
# BEM JULY 2023
library(ggplot2)
ggplot(data = LAU[which(LAU$CensusID == 5), ], aes(x = x, y = y, fill = DFstatus)) +
geom_point()
table(LAU$sp)
View(LAU)
length(unique(LAU$treeID))
table(intersect(LAU$sp, LAU$DFstatus))
?intersection
table(intersection(LAU$sp, LAU$DFstatus))
table(LAU$sp, LAU$DFstatus)
# just use species with > 100 total stems
sp_tbl <- table(LAU$sp, LAU$status)
head(sp_tbl)
# just use species with > 100 total stems
sp_tbl <- table(LAU$sp, LAU$DFsstatus)
# just use species with > 100 total stems
sp_tbl <- table(LAU$sp, LAU$DFstatus)
sp_tbl
sp_tbl$n <- rowSums(sp_tbl)
# just use species with > 100 total stems
sp_tbl <- table(LAU$sp, LAU$DFstatus)
sp_tbl <- as.data.frame(sp_tbl)
head(sp_tbl)
View(sp_tbl)
aggregate(sp_tbl$Freq, by = sp_tbl$Var1, FUN = sum)
aggregate(sp_tbl$Freq, by = list(sp_tbl$Var1), FUN = sum)
sp_tbl <- aggregate(sp_tbl$Freq, by = list(sp_tbl$Var1), FUN = sum)
sp_tbl <- sp_tbl[which(sp_tbl$x > 100), ]
sp_tbl
sp_tbl <- sp_tbl[which(sp_tbl$x > 300), ]
LAU <- LAU[which(LAU$sp %in% sp_tbl$Group.1), ]
# QA/QC
LAU <- read.csv(file.path(data_dir, '/data/Laupahoehoe_master.csv'), header = T)
# total lines 124278
# drop extra columns
LAU <- LAU[, c(1:33)]
colnames(LAU) <- c(colnames(LAU)[c(1:23)], 'SPACE', colnames(LAU)[24:(length(colnames(LAU)) - 1)])
# force coercion
LAU$treeID <- as.numeric(LAU$treeID)
LAU <- LAU[!is.na(LAU$treeID), ]
# 124246 stems, less than 1% drop
# drop weird columns
LAU <- LAU[, -c(1, 2, 11, 14, 17, 18, 24)]
# some columns are empty
LAU <- LAU[, -which(colnames(LAU) %in% c('StemTag', 'agb', 'codes'))]
# drop records which dont have a species
LAU <- LAU[!is.na(LAU$sp), ]
# drop records which dont have a status
LAU <- LAU[!is.na(LAU$status), ]
# short-term filters
# use only main stems
LAU <- LAU[which(LAU$mstem == 0), ]
# drop the METPOL which were not measured in every census
MET_full <- LAU[which(LAU$sp == 'METPOL' & !is.na(LAU$dbh)), ]
table(MET_full$CensusID)
# census 1 and 5 are the full census
rm(MET_full)
LAU <- LAU[which(LAU$CensusID %in% c(1, 5)), ]
# don't know what 'prior' means
LAU <- LAU[-which(LAU$DFstatus == 'prior'), ]
LAU[which(LAU$DFstatus %in% c('gone', 'missing')), 'DFstatus'] <- 'dead'
# all trees alive in first census
# just use 5th census
LAU <- LAU[which(LAU$CensusID == 5), ]
# just use species with > 100 total stems
sp_tbl <- table(LAU$sp, LAU$DFstatus)
sp_tbl <- as.data.frame(sp_tbl)
sp_tbl <- aggregate(sp_tbl$Freq, by = list(sp_tbl$Var1), FUN = sum)
sp_tbl <- sp_tbl[which(sp_tbl$x > 300), ] # cutoff of 300 total stems
nrow(LAU)
# 15486 before
LAU <- LAU[which(LAU$sp %in% sp_tbl$Group.1), ]
14325 / 15486
head(LAU)
table(LAU$DFstatus)
2476 / 11849
ggplot(data = LAU[which(LAU$CensusID == 5), ], aes(x = x, y = y, color = DFstatus)) +
geom_point() +
scale_fill_color
ggplot(data = LAU[which(LAU$CensusID == 5), ], aes(x = x, y = y, color = DFstatus)) +
geom_point() +
scale_fill_color(values = c('black', 'red'))
ggplot(data = LAU[which(LAU$CensusID == 5), ], aes(x = x, y = y, color = DFstatus)) +
geom_point() +
scale_color_manual(values = c('black', 'red'))
ggplot(data = LAU[which(LAU$CensusID == 5), ], aes(x = x, y = y, color = DFstatus)) +
geom_point() +
scale_color_manual(values = c('black', 'red')) +
theme_bw() +
theme(
axis.text.x = element_text(color = 'black'),
axis.text.y = element_text(color = 'black')
)
ggplot(data = LAU[which(LAU$CensusID == 5), ], aes(x = x, y = y, color = DFstatus)) +
geom_point() +
scale_color_manual(values = c('black', 'red')) +
theme_bw() +
theme(
axis.text.x = element_blank(),
axis.text.y = elment_blank(),
) +
labs(x = '', y = '')
ggplot(data = LAU[which(LAU$CensusID == 5), ], aes(x = x, y = y, color = DFstatus)) +
geom_point() +
scale_color_manual(values = c('black', 'red')) +
theme_bw() +
theme(
axis.text.x = element_blank(),
axis.text.y = elesment_blank(),
) +
labs(x = '', y = '')
ggplot(data = LAU[which(LAU$CensusID == 5), ], aes(x = x, y = y, color = DFstatus)) +
geom_point() +
scale_color_manual(values = c('black', 'red')) +
theme_bw() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
) +
labs(x = '', y = '')
LAU_DEM_fl <- '../data/LAU_DEM.tif'
file.exists(LAU_DEM_fl)
# BEM JULY 2023
library(terra)
LAU_DEM <- terra::rast(LAU_DEM_fl)
plot(LAU_DEM)
range(LAU$x)
install.packages("tidyterra")
library(tidyrterra)
library(tidyterra)
ggplot2::autoplot(LAU_DEM)
DEM <- ggplot2::autoplot(LAU_DEM)
DEM
# 14325 after, 8% reduction
# 2476 / 11849 stems, ~20% dead
LAU <- LAU[which(LAU$CensusID == 5), ]
DEM <- ggplot2::autoplot(LAU_DEM) +
geom_point(data = LAU, aes(x = x, y = y, color = DFstatus))
DEM
DEM <- ggplot2() +
geom_spatraster(data = DEM)
DEM <- ggplot() +
geom_spatraster(data = DEM)
DEM <- ggplot() +
geom_spatraster(data = LAU_DEM)
DEM
DEM <- ggplot() +
geom_spatraster(data = LAU_DEM) +
geom_point(data = LAU, aes(x = x, y = y, color = DFstatus))
DEM
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black'))
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'red'))
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', pch = 20))
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey50', pch = 20))
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', pch = 20))
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey60', pch = 20))
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', pch = 19))
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey60', pch = 19))
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', pch = 20), cex = 0.3)
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey60', pch = 20), cex = 0.3)
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', pch = 20), cex = 0.2)
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey60', pch = 20), cex = 0.2)
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', cex = 0.3, pch = 20))
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey60', cex = 0.3, pch = 20))
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', cex = 0.4, pch = 20))
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey60', cex = 0.4, pch = 20))
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', cex = 0.8, pch = 20))
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey60', cex = 0.8, pch = 20))
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', cex = 0.7, pch = 20))
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey60', cex = 0.7, pch = 20))
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', cex = 0.95, pch = 20))
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey60', cex = 0.95, pch = 20))
length(unique(LAU$sp))
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', cex = 0.95, pch = 20))
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey60', cex = 0.95, pch = 20))
# base plot approach
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', cex = 0.95, pch = 20))
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey60', cex = 0.95, pch = 20))
getwd()
list.files("..")
# 14325 after, 8% reduction
# 2476 / 11849 stems, ~20% dead
write.csv(LAU, '../data/LAU_processed.csv', row.names = F)
# Purpose: Initial import script for demography data from Becky's census 1-6 data
data_dir <- '/home/bem/Documents/ForestGEO/analysis/data/Census 1-6 CTFS formatted data'
LAU_DEM_fl <- '../data/LAU_DEM.tif'
LAU_DEM <- terra::rast(LAU_DEM_fl)
# QA/QC
LAU <- read.csv(file.path(data_dir, '/data/Laupahoehoe_master.csv'), header = T)
# total lines 124278
# drop extra columns
LAU <- LAU[, c(1:33)]
colnames(LAU) <- c(colnames(LAU)[c(1:23)], 'SPACE', colnames(LAU)[24:(length(colnames(LAU)) - 1)])
# force coercion
LAU$treeID <- as.numeric(LAU$treeID)
LAU <- LAU[!is.na(LAU$treeID), ]
# 124246 stems, less than 1% drop
# drop weird columns
LAU <- LAU[, -c(1, 2, 11, 14, 17, 18, 24)]
# some columns are empty
LAU <- LAU[, -which(colnames(LAU) %in% c('StemTag', 'agb', 'codes'))]
# drop records which dont have a species
LAU <- LAU[!is.na(LAU$sp), ]
# drop records which dont have a status
LAU <- LAU[!is.na(LAU$status), ]
# short-term filters
# use only main stems
LAU <- LAU[which(LAU$mstem == 0), ]
# drop the METPOL which were not measured in every census
MET_full <- LAU[which(LAU$sp == 'METPOL' & !is.na(LAU$dbh)), ]
table(MET_full$CensusID)
# census 1 and 5 are the full census
rm(MET_full)
LAU <- LAU[which(LAU$CensusID %in% c(1, 5)), ]
# don't know what 'prior' means
LAU <- LAU[-which(LAU$DFstatus == 'prior'), ]
LAU[which(LAU$DFstatus %in% c('gone', 'missing')), 'DFstatus'] <- 'dead'
# all trees alive in first census
# just use 5th census
LAU <- LAU[which(LAU$CensusID == 5), ]
# just use species with > 100 total stems
sp_tbl <- table(LAU$sp, LAU$DFstatus)
sp_tbl <- as.data.frame(sp_tbl)
sp_tbl <- aggregate(sp_tbl$Freq, by = list(sp_tbl$Var1), FUN = sum)
sp_tbl <- sp_tbl[which(sp_tbl$x > 300), ] # cutoff of 300 total stems
# 15486 before
LAU <- LAU[which(LAU$sp %in% sp_tbl$Group.1), ]
# 14325 after, 8% reduction
# 2476 / 11849 stems, ~20% dead
write.csv(LAU, '../data/LAU_processed.csv', row.names = F, overwrite = T)
# 14325 after, 8% reduction
# 2476 / 11849 stems, ~20% dead
write.csv(LAU, '../data/LAU_processed.csv', row.names = F)
LAU_demography_fl <- '../data/LAU_processed.csv'
LAU <- read.csv(LAU_demography_fl)
LAU_only5 <- LAU[which(LAU$CensusID == 5), ]
LAU_DEM_fl <- '../data/LAU_DEM.tif'
LAU_demography_fl <- '../data/LAU_processed.csv'
LAU_DEM <- terra::rast(LAU_DEM_fl)
LAU <- read.csv(LAU_demography_fl)
LAU_only5 <- LAU[which(LAU$CensusID == 5), ]
rm(list = ls())
gc()
LAU_DEM_fl <- '../data/LAU_DEM.tif'
LAU_demography_fl <- '../data/LAU_processed.csv'
LAU_DEM <- terra::rast(LAU_DEM_fl)
LAU <- read.csv(LAU_demography_fl)
LAU_only5 <- LAU[which(LAU$CensusID == 5), ]
# Base plot of DEM, points (alive), points(dead)
plot(LAU_DEM)
with(subset(LAU, DFstatus == 'alive'), points(x, y, col = 'black', cex = 0.95, pch = 20))
with(subset(LAU, DFstatus == 'dead'), points(x, y, col = 'grey60', cex = 0.95, pch = 20))
# Base plot of DEM, points (alive), points(dead)
plot(LAU_DEM)
with(subset(LAU_only5, DFstatus == 'alive'), points(x, y, col = 'black', cex = 0.95, pch = 20))
with(subset(LAU_only5, DFstatus == 'dead'), points(x, y, col = 'grey60', cex = 0.95, pch = 20))
head(LAU)
table(LAU$sp)
library(devtools)
use_vignette('make_workshop_plots')
library(FGEO1)
library(devtools)
rm(list = ls())
document()
library(FGEO1)
document()
library(FGEO1)
library(FGEO1)
# Table of sp + full sp x sample size + n alive + n dead
table(LAU$sp, LAU$DFstatus)
LAU_DEM_fl <- '../data/LAU_DEM.tif'
LAU_demography_fl <- '../data/LAU_processed.csv'
LAU_DEM <- terra::rast(LAU_DEM_fl)
LAU_DEM_fl <- '../../data/LAU_DEM.tif'
LAU_demography_fl <- '../../data/LAU_processed.csv'
LAU_DEM <- terra::rast(LAU_DEM_fl)
LAU <- read.csv(LAU_demography_fl)
LAU_only5 <- LAU[which(LAU$CensusID == 5), ]
# Table of sp + full sp x sample size + n alive + n dead
table(LAU$sp, LAU$DFstatus)
head(LAU_only5)
str(LAU_only5$ExactDate)
strsplit(LAU_only5$ExactDate, ' ')
sapply(strsplit(LAU_only5$ExactDate, ' '), \(xx) xx[1])
strptime(sapply(strsplit(LAU_only5$ExactDate, ' '), \(xx) xx[1]), format = "%m/%d/%y")
as.POSIXct(strptime(sapply(strsplit(LAU_only5$ExactDate, ' '), \(xx) xx[1]), format = "%m/%d/%y"))
range(as.POSIXct(strptime(sapply(strsplit(LAU_only5$ExactDate, ' '), \(xx) xx[1]), format = "%m/%d/%y")))
strptime(sapply(strsplit(LAU_only5$ExactDate, ' '), \(xx) xx[1]), format = "%m/%d/%y")
strptime(sapply(strsplit(LAU_only5$ExactDate, ' '), \(xx) xx[1]), format = "%m/%d/%y")$year
strptime(sapply(strsplit(LAU_only5$ExactDate, ' '), \(xx) xx[1]), format = "%m/%d/%y")$year + 1990
strptime(sapply(strsplit(LAU_only5$ExactDate, ' '), \(xx) xx[1]), format = "%m/%d/%y")$year + 1900
table(strptime(sapply(strsplit(LAU_only5$ExactDate, ' '), \(xx) xx[1]), format = "%m/%d/%y")$year + 1900)
table(strptime(sapply(strsplit(LAU$ExactDate, ' '), \(xx) xx[1]), format = "%m/%d/%y")$year + 1900)
LAU <- read.csv(LAU_demography_fl)
table(LAU$CensusID)
# BEM JULY 2023
# Purpose: Initial import script for demography data from Becky's census 1-6 data
data_dir <- '/home/bem/Documents/ForestGEO/analysis/data/Census 1-6 CTFS formatted data'
# QA/QC
LAU <- read.csv(file.path(data_dir, '/data/Laupahoehoe_master.csv'), header = T)
# total lines 124278
# drop extra columns
LAU <- LAU[, c(1:33)]
colnames(LAU) <- c(colnames(LAU)[c(1:23)], 'SPACE', colnames(LAU)[24:(length(colnames(LAU)) - 1)])
# force coercion
LAU$treeID <- as.numeric(LAU$treeID)
LAU <- LAU[!is.na(LAU$treeID), ]
# 124246 stems, less than 1% drop
# drop weird columns
LAU <- LAU[, -c(1, 2, 11, 14, 17, 18, 24)]
# some columns are empty
LAU <- LAU[, -which(colnames(LAU) %in% c('StemTag', 'agb', 'codes'))]
# drop records which dont have a species
LAU <- LAU[!is.na(LAU$sp), ]
# drop records which dont have a status
LAU <- LAU[!is.na(LAU$status), ]
# short-term filters
# use only main stems
LAU <- LAU[which(LAU$mstem == 0), ]
# drop the METPOL which were not measured in every census
MET_full <- LAU[which(LAU$sp == 'METPOL' & !is.na(LAU$dbh)), ]
table(MET_full$CensusID)
# census 1 and 5 are the full census
rm(MET_full)
LAU <- LAU[which(LAU$CensusID %in% c(1, 5)), ]
# don't know what 'prior' means
LAU <- LAU[-which(LAU$DFstatus == 'prior'), ]
LAU[which(LAU$DFstatus %in% c('gone', 'missing')), 'DFstatus'] <- 'dead'
# all trees alive in first census
# just use species with > 100 total stems
sp_tbl <- table(LAU$sp, LAU$DFstatus)
sp_tbl <- as.data.frame(sp_tbl)
sp_tbl <- aggregate(sp_tbl$Freq, by = list(sp_tbl$Var1), FUN = sum)
sp_tbl <- sp_tbl[which(sp_tbl$x > 300), ] # cutoff of 300 total stems
# 15486 before
LAU <- LAU[which(LAU$sp %in% sp_tbl$Group.1), ]
# 14325 after, 8% reduction
# 2476 / 11849 stems, ~20% dead
write.csv(LAU, '../data/LAU_processed.csv', row.names = F)
rm(list = ls())
gc()
save.image()
LAU_DEM_fl <- '../../data/LAU_DEM.tif'
LAU_demography_fl <- '../../data/LAU_processed.csv'
LAU_DEM <- terra::rast(LAU_DEM_fl)
LAU <- read.csv(LAU_demography_fl)
LAU_only5 <- LAU[which(LAU$CensusID == 5), ]
# Table of sp + full sp x sample size + n alive + n dead
table(LAU$sp, LAU$DFstatus)
table(strptime(sapply(strsplit(LAU$ExactDate, ' '), \(xx) xx[1]), format = "%m/%d/%y")$year + 1900)
# Table of sp + full sp x sample size + n alive + n dead
table(LAU$sp, LAU$DFstatus)
library(FGEO1)
library(ggplot2)
head(LAU_only5)
# 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
library(FGEO1)
library(ggplot2)
# Stacked bar of dfstatus x sp
ggplot(data = LAU_only5, aes(x = sp)) +
geom_bar(position = 'stack', stat = 'count')
# Stacked bar of dfstatus x sp
ggplot(data = LAU_only5, aes(x = sp)) +
geom_bar(position = 'stack', stat = 'count')
View(LAU_only5)
# Stacked bar of dfstatus x sp
ggplot(data = LAU_only5, aes(x = sp, fill = dfStatus)) +
geom_bar(position = 'stack', stat = 'count')
head(LAU)
# Stacked bar of dfstatus x sp
ggplot(data = LAU_only5, aes(x = sp, fill = DFstatus)) +
geom_bar(position = 'stack', stat = 'count')
# Stacked bar of dfstatus x sp
ggplot(data = LAU_only5, aes(x = sp, fill = DFstatus)) +
geom_bar(position = 'stack', stat = 'count') +
theme_bw() +
theme(
axis.text.x = element_text(color = 'black'),
axis.text.y = element_text(color = 'black')
)
# Stacked bar of dfstatus x sp
ggplot(data = LAU_only5, aes(x = sp, fill = DFstatus)) +
geom_bar(position = 'stack', stat = 'count') +
scale_fill_manaul(values = c('black', 'red')) +
theme_bw() +
theme(
axis.text.x = element_text(color = 'black'),
axis.text.y = element_text(color = 'black')
)
# Stacked bar of dfstatus x sp
ggplot(data = LAU_only5, aes(x = sp, fill = DFstatus)) +
geom_bar(position = 'stack', stat = 'count') +
scale_fill_manual(values = c('black', 'red')) +
theme_bw() +
theme(
axis.text.x = element_text(color = 'black'),
axis.text.y = element_text(color = 'black')
)
# Stacked bar of dfstatus x sp
ggplot(data = LAU_only5, aes(x = sp, fill = DFstatus)) +
geom_bar(position = 'stack', stat = 'count') +
scale_fill_manual(values = c('grey20', 'red')) +
theme_bw() +
theme(
axis.text.x = element_text(color = 'black'),
axis.text.y = element_text(color = 'black')
)
# Stacked bar of dfstatus x sp
ggplot(data = LAU_only5, aes(x = sp, fill = DFstatus)) +
geom_bar(position = 'stack', stat = 'count') +
scale_fill_manual(values = c('grey20', 'red'), labels = c('Alive', 'Dead')) +
theme_bw() +
theme(
axis.text.x = element_text(color = 'black'),
axis.text.y = element_text(color = 'black')
) +
labs(x = 'Species', y = 'n', fill = 'Status')
ggplot(data = LAU_only5, aes(x = sp, fill = DFstatus)) +
geom_bar(position = 'stack', stat = 'count') +
scale_fill_manual(values = c('grey20', 'red'), labels = c('Alive', 'Dead')) +
theme_bw() +
theme(
axis.text.x = element_text(color = 'black'),
axis.text.y = element_text(color = 'black')
) +
labs(x = 'Species', y = 'n', fill = 'Status')
# Table of sp + full sp x sample size + n alive + n dead
tbl_1 <- table(LAU$sp, LAU$DFstatus)
tbl_1
as.data.frame(tbl_1)
data.frame(tbl_1)
as.matrix(tbl_1)
tbl_1 <- as.data.frame(as.matrix(tbl_1))
tbl_1
# Table of sp + full sp x sample size + n alive + n dead
tbl_1 <- table(LAU$sp, LAU$DFstatus)
tbl_1 <- as.matrix(tbl_1)
tbl_1
str(tbl_1)
data.frame(tbl_1)
tbl_1$sp <- row.names(tbl_1)
tbl_1
tbl_1
# Table of sp + full sp x sample size + n alive + n dead
tbl_1 <- table(LAU$sp, LAU$DFstatus)
tbl_1 <- as.matrix(tbl_1)
tbl_1
as.data.frame(tbl_1)
?as.data.frame
as.data.frame(tbl-1)
as.data.frame(tbl_
1)
as.data.frame(tbl_1)
as.data.frame(tbl_1, optional = T)
rm(list = ls())
gc)
gc()
